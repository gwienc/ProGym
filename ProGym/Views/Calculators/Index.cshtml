@model ProGym.ViewModels.CalculatorsViewModel
@{
    ViewBag.Title = "Index";
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_ManageLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_GymLayout.cshtml";
    }


    AjaxOptions bmi = new AjaxOptions()
    {
        Url = Url.Action("CalculateBMI", "Calculators"),
        HttpMethod = "Post",
        OnSuccess = "DisplayBMI"
    };
    AjaxOptions oneRepMax = new AjaxOptions()
    {
        Url = Url.Action("CalculateOneRepMax", "Calculators"),
        HttpMethod = "Post",
        OnSuccess = "DisplayOneRepMax"
    };
    AjaxOptions BMR = new AjaxOptions()
    {
        Url = Url.Action("CalculateBMR", "Calculators"),
        HttpMethod = "Post",
        OnSuccess = "DisplayBMR"
    };
    AjaxOptions PeffectWeight = new AjaxOptions()
    {
        Url = Url.Action("CalculatePerfectWeight", "Calculators"),
        HttpMethod = "Post",
        OnSuccess = "DisplayPerfectWeight"
    };
    AjaxOptions CalculateBodyFatIndex = new AjaxOptions()
    {
        Url = Url.Action("CalculateBodyFatIndex", "Calculators"),
        HttpMethod = "Post",
        OnSuccess = "CalculateBodyFatIndex"
    };

}

@Html.Partial("_BreadCrumb")

<section>
    <div class="container-fluid second-group text-center">
        <div class="calculator row justify-content-center">
            <h1>Oblicz swoje BMI</h1>
            <div class="col-6 pt-5 text-center">
                @using (Ajax.BeginForm(bmi))
                {
                    @Html.AntiForgeryToken()

                    <div class="row p-2">
                        <div class="col-md-6 text-md-end">
                            @Html.LabelFor(x => x.Weight, "Twoja masa (kg):")
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(x => x.Weight, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Weight)
                        </div>
                    </div>
                    <div class="row p-2 pb-5">
                        <div class="col-md-6 text-md-end">
                            @Html.LabelFor(x => x.Height, "Twój wzrost (cm):")
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(x => x.Height, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Height)
                        </div>
                    </div>

                    <input type="submit" value="Oblicz" class="btn btn-success ps-4 pe-4" />
                }
                <div class="mb-3 row pt-5 p-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.ResultBMI, "Twoje BMI: ")
                        <div id="resultBMI" style="display:inline-block">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row pt-5 pb-2 justify-content-center">
                <div class="col-8">
                    <p>
                        BMI jest wskaźnikiem odnoszącym się do relacji pomiędzy masą ciała a wzrostem (body mass index).
                        Pozwala m.in. na wyłonienie ze społeczeństwa jednostek o wyższym ryzyku występowania nadwagi i otyłości, a co za tym idzie wyższym ryzyku zachorowania na choroby cywilizacyjne, takie jak cukrzyca typu 2, miażdżyca, czy nadciśnienie.
                        Nie zawsze jednak wyniki wyliczeń BMI są adekwatne do sytuacji rzeczywistej i czasami mogą dawać nieco mylne pole do wnioskowania.
                        Utrudnione może być jego wykorzystanie m.in. w przypadku dzieci i młodzieży, a także sportowców (głównie uprawiających dyscypliny siłowe). Ciekawy jest fakt, że korzysta się z niego już od około 180 lat.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<section>
    <div class="container-fluid first-group text-center pt-5">
        <div class="calculator row justify-content-center">
            <h1>Oblicz 1RM</h1>
            <div class="col-6 pt-5 text-center">
                @using (Ajax.BeginForm(oneRepMax))
                {
                    @Html.AntiForgeryToken()
                    <div class="row p-2">
                        <div class="col-md-6 text-md-end">
                            @Html.LabelFor(x => x.Weight, "Ciężar (kg):")
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(x => x.Weight, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Weight)
                        </div>
                    </div>
                    <div class="row p-2 pb-5">
                        <div class="col-md-6 text-md-end">
                            @Html.LabelFor(x => x.NumberOfRepetitions, "Liczba powtórzeń:")
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(x => x.NumberOfRepetitions, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.NumberOfRepetitions)
                        </div>
                    </div>

                    <input type="submit" value="Oblicz" class="btn btn-success ps-4 pe-4" />
                }
                <div class="mb-3 row pt-5 p-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.ResultRepMax, "1RM: ")
                        <div id="resultOneRepMax" style="display:inline-block">

                        </div>
                    </div>
                </div>
            </div>
            <div class="row pt-5 pb-2 justify-content-center">
                <div class="col-8">
                    <p>
                        Kalkulator 1 RM (ang. one rep max - jedno powtórzenie maksymalne) służy do obliczenia przybliżonej wartości rekordu w kilogramach w danym ćwiczeniu na podstawie rekordu powtórzeniowego.
                        Przykładowo - w sytuacji, gdy udało Ci się wykonać ćwiczenie z ciężarem 100 kg na 3 ruchy to po wpisaniu tych danych w kalkulator okaże się, że Twój rekord w tym ćwiczeniu oscyluje w okolicach 110 kg.
                        Kalkulator korzysta ze wzoru, który dodaje 10% do wyniku za każde 3 dodatkowe powtórzenia (co ładnie pokazuje przykład z powyższego akapitu). Takie podejście posiada oczywiście ograniczenia.
                        Wydolność neuromuskularna, proporcja włókien, czy nawet dyspozycja dnia - wszystkie te rzeczy wpływają na zdolności siłowe. Pamiętaj więc, że wynik jest pewnym przybliżeniem.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<section>
    <div class="container-fluid second-group text-center pt-5">
        <div class="calculator row justify-content-center">
            <h1>Oblicz swoje BMR</h1>
            <div class="col-6 pt-5 text-center">
                @using (Ajax.BeginForm(BMR))
                {
                    @Html.AntiForgeryToken()
                    <div class="row input-group text-start pb-5">
                        <div class="col-lg-4">
                            <div class="row">
                                @Html.LabelFor(x => x.Gender, "Płeć:")
                            </div>
                            <div class="form-check form-check-inline">
                                <div id="inlineRadio1">@Html.RadioButtonFor(x => x.Gender, "M", new { @class = "form-check-input" })</div>
                                <label class="form-check-label" for="inlineRadio1">Mężczyzna</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <div id="inlineRadio2">@Html.RadioButtonFor(x => x.Gender, "K", new { @class = "form-check-input" })</div>
                                <label class="form-check-label" for="inlineRadio2">Kobieta</label><br />
                                @Html.ValidationMessageFor(o => o.Gender)
                            </div>
                        </div>
                        <div class="col-lg-8">
                            <div class="row">
                                @Html.Label("Aktywność fizyczna:")
                            </div>
                            <div class="row ps-3 pe-3">
                                @Html.DropDownListFor(x => x.ActivityID, new SelectList(ViewBag.Activities, "ID", "Description"), "Wybierz rodzaj aktywności", new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.ActivityID)
                            </div>
                        </div>
                    </div>
                    <div class="row input-group text-start pb-5">
                        <div class="col-lg-6">
                            <div class="row">
                                @Html.Label("Somatotyp:")
                            </div>
                            <div class="row ps-3 pe-3">
                                @Html.DropDownListFor(x => x.TypeID, new SelectList(ViewBag.Types, "ID", "Description"), "Wybierz swój somatotyp", new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.TypeID)
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="row">
                                @Html.Label("Twój cel:")
                            </div>
                            <div class="row ps-3 pe-3">
                                @Html.DropDownListFor(x => x.PurposeID, new SelectList(ViewBag.Purposes, "ID", "Description"), "Wybierz swój cel", new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.PurposeID)
                            </div>
                        </div>
                    </div>
                    <div class="row input-group text-start pb-4">
                        <div class="col-lg-4">
                            @Html.LabelFor(x => x.Weight, "Waga (kg):")
                            @Html.TextBoxFor(x => x.Weight, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Weight)
                        </div>
                        <div class="col-lg-4">
                            @Html.LabelFor(x => x.Height, "Wzrost (cm):")
                            @Html.TextBoxFor(x => x.Height, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Height)
                        </div>
                        <div class="col-lg-4">
                            @Html.LabelFor(x => x.Age, "Wiek:")
                            @Html.TextBoxFor(x => x.Age, new { @class = "form-control" })
                            @Html.ValidationMessageFor(o => o.Age)
                        </div>
                    </div>
                    <div class="row pt-2 justify-content-center">
                        <div class="col-6 ">
                            <input type="submit" value="Oblicz" class="btn btn-success ps-4 pe-4" />
                        </div>
                    </div>
                }
                <div class=" row pt-3 pt-5 pb-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.ResultBMR, "BMR: ")
                        <div id="resultBMR" style="display:inline-block">

                        </div>
                    </div>
                </div>
                <div class=" row pt-3 pb-5 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.TotalCaloricRequirement, "Całkowite zapotrzebowanie kaloryczne: ")
                        <div id="totalCaloricRequirement" style="display:inline-block">

                        </div>
                    </div>
                </div>
            </div>
            <div class="row pt-5 pb-2 justify-content-center">
                <div class="col-8">
                    <p>
                        Znajmość BMR (PPM) - podstawowej przemiany materii oraz TMR (CPM) - całkowitej przemiany materii jest konieczne, by odpowiednio kształtować swoją sylwetkę,
                        niezależnie czy chcemy schudnąć, przybrać na masie czy utrzymać wagę, zapotrzebowanie kaloryczne i jego obliczenie są podstawowymi czynnikami, które nam pomogą w osiągnięciu celu.
                        Wartość BMR określa liczbę kalorii, którą organizm przeznacza w ciągu doby na podstawowe funkcje życiowe, podczas odchudzania nie powinniśmy spożywać mniej kalorii niż wynosi nasze BMR,
                        może to przynieść wiele niepożądanych skutków, takich jak: znaczne osłabienie, zwiększenie kortyzolu, ból czy zawroty głowy, długotrwałe spożywanie zbyt małej liczby kalorii może doprowadzić do poważnych chorób.
                        Drugą stroną medalu jest spożywanie zbyt dużej liczby kalorii, źle obliczony wskaźnik CPM i przesadzenie ze spożywanym jedzeniem może powodować nadmierne otłuszczenie, w tym organów wewnętrznych, dlatego tak ważne jest obliczenie dokładnego zapotrzebowania kalorycznego.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<section>
    <div class="container-fluid first-group text-center pt-5">
        <div class="calculator row justify-content-center">
            <h1>Oblicz swoją idealną wagę</h1>
            <div class="col-6 pt-5 text-center">
                @using (Ajax.BeginForm(PeffectWeight))
                {
                    @Html.AntiForgeryToken()
                    <div class="row input-group justify-content-center text-start pb-5">
                        <div class="col-lg-4">
                            <div class="row">
                                @Html.LabelFor(x => x.Gender, "Płeć:")
                            </div>
                            <div class="form-check form-check-inline">
                                <div id="inlineRadio1">@Html.RadioButtonFor(x => x.Gender, "M", new { @class = "form-check-input" })</div>
                                <label class="form-check-label" for="inlineRadio1">Mężczyzna</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <div id="inlineRadio2">@Html.RadioButtonFor(x => x.Gender, "K", new { @class = "form-check-input" })</div>
                                <label class="form-check-label" for="inlineRadio2">Kobieta</label>

                            </div>
                            <br />
                            @Html.ValidationMessageFor(o => o.Gender)
                        </div>
                        <div class="col-lg-4 pt-xxl-0 pt-lg-0 pt-sm-4">
                            <div class="row">
                                @Html.Label("Twój wzrost:")
                            </div>
                            <div class="row ps-3 pe-3">
                                @Html.TextBoxFor(x => x.Height, new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.Height)
                            </div>
                        </div>
                    </div>
                    <input type="submit" value="Oblicz" class="btn btn-success ps-4 pe-4" />
                }
                <div class="mb-3 row pt-5 p-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.PerfectWeightBroc, "Idealna waga wg Broca: ")
                        <div id="perfectWeightBroc" style="display:inline-block">
                        </div>
                    </div>
                </div>
                <div class="mb-3 row pt-2 p-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.PerfectWeightLorentz, "Idealna waga wg Lorentza: ")
                        <div id="perfectWeightLorentz" style="display:inline-block">
                        </div>
                    </div>
                </div>
                <div class="mb-3 row pt-2 p-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.PerfectWeightPotton, "Idealna waga wg Pottona: ")
                        <div id="perfectWeightPotton" style="display:inline-block">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row pt-5 pb-2 justify-content-center">
                <div class="col-8">
                    <p>
                        Przyjmuje się, że wzór Broca jest miarodajny dla osób o wzroście nie mniejszym niż 160 cm i nie większym niż 190 cm.
                        W praktyce będzie on znacznie lepiej działał w przypadku niskich osób niż tych wysokich.
                    </p>
                    <p>
                        Wzór Lorentza to jeden z najczęściej stosowanych wzorów na idealną masę ciała. Nie sprawdza się najlepiej przy niskim wzroście (ok. 150 cm).
                    </p>
                    <p>
                        Wzór Pottona opiera się na zakresach BMI, a otrzymany wynik stanowi idealny środek normy BMI.
                        Dla większości osób ta waga może być zbyt wysoka i nie pokrywać się z indywidualnymi oczekiwaniami dotyczącymi idealnej sylwetki.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
<section>
    <div class="container-fluid second-group text-center pt-5">
        <div class="calculator row justify-content-center">
            <h1>Oblicz swój wskaźnik tkanki tłuszczowej</h1>
            <div class="col-6 pt-5 text-center">
                @using (Ajax.BeginForm(CalculateBodyFatIndex))
                {
                    @Html.AntiForgeryToken()
                    <div class="row input-group justify-content-center text-start pb-5">
                        <div class="col-xl-4">
                            <div class="row">
                                @Html.LabelFor(x => x.Gender, "Płeć:")
                            </div>
                            <div class="form-check form-check-inline">
                                <div id="inlineRadio1">@Html.RadioButtonFor(x => x.Gender, "M", new { @class = "form-check-input" })</div>
                                <label class="form-check-label" for="inlineRadio1">Mężczyzna</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <div id="inlineRadio2">@Html.RadioButtonFor(x => x.Gender, "K", new { @class = "form-check-input" })</div>
                                <label class="form-check-label" for="inlineRadio2">Kobieta</label>

                            </div>
                            <br />
                            @Html.ValidationMessageFor(o => o.Gender)
                        </div>
                        <div class="col-xl-4 pt-xxl-0 pt-lg-0 pt-sm-4">
                            <div class="row">
                                @Html.Label("Masa (kg):")
                            </div>
                            <div class="row ps-3 pe-3">
                                @Html.TextBoxFor(x => x.Weight, new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.Weight)
                            </div>
                        </div>
                        <div class="col-xl-4 pt-xxl-0 pt-lg-0 pt-sm-4">
                            <div class="row">
                                @Html.Label("Obwód pasa (cm):")
                            </div>
                            <div class="row ps-3 pe-3">
                                @Html.TextBoxFor(x => x.Waist, new { @class = "form-control" })
                                @Html.ValidationMessageFor(o => o.Waist)
                            </div>
                        </div>
                    </div>
                    <input type="submit" value="Oblicz" class="btn btn-success ps-4 pe-4" />
                }
                <div class="mb-3 row pt-5 p-2 text-center">
                    <div class="col-12" style="display:inline-block">
                        @Html.LabelFor(x => x.BodyFatIndex, "Wskaźnik tkanki tłuszczowej: ")
                        <div id="bodyFatIndex" style="display:inline-block">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row pt-5 pb-2 justify-content-center">
                <div class="col-8">
                    <p>
                        Jak działa kalkulator tkanki tłuszczowej? To wskaźnik określający procentowy udział tkanki tłuszczowej w ciele, który ma za zadanie ukazać, ile procent w całej masie ciała stanowi tłuszcz.
                        Jest to istotny element, który nadaje się do tego, aby miarodajnie kontrolować postępy odchudzania, jak i to, czy nadwyżka kaloryczna podczas budowania masy nie jest zbyt wysoka.
                        Wskaźnik procentowej zawartości tłuszczu jest powszechnie wykorzystywanym narzędziem przez dietetyków, jak i trenerów personalnych. Z powodzeniem możesz go także użyć samodzielnie.
                        Uzyskany wynik to procentowa zawartość tkanki tłuszczowej w organizmie (BF %), który należy uznawać za rzetelny.
                        Dokładność wyliczonego rezultatu jest dość precyzyjna, a błąd może może wynosić do kilku punktów procentowych (z reguły +/- ~3 %).
                        Pamiętaj, że aby kalkulator tkanki tłuszczowej mógł pokazać precyzyjny wynik, musisz podać jak najdokładniejsze wymiary.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>
@section ScriptsBottom{
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    <script>
        function DisplayBMI(data) {
            var container = $('#resultBMI');
            $(container).html('');
            resultBMI = data.ResultBMI + ' - ' + data.Range;
            $(container).append(resultBMI);
        }
    </script>

    <script>
        function DisplayOneRepMax(data) {
            var container = $('#resultOneRepMax');
            $(container).html('');
            resultOneRepMax = data.ResultRepMax;
            $(container).append(resultOneRepMax);
        }
    </script>

    <script>
        function DisplayBMR(data) {
            var container = $('#resultBMR');
            var container2 = $('#totalCaloricRequirement');

            $(container).html('');
            $(container2).html('');

            resultBMR = data.ResultBMR + ' kcal';
            totalCaloricRequirement = data.TotalCaloricRequirement + ' kcal';

            $(container).append(resultBMR);
            $(container2).append(totalCaloricRequirement);
        }
    </script>

    <script>
        function DisplayPerfectWeight(data) {
            var container = $('#perfectWeightBroc');
            var container2 = $('#perfectWeightLorentz');
            var container3 = $('#perfectWeightPotton');

            $(container).html('');
            $(container2).html('');
            $(container3).html('');

            perfectWeightBroc = data.PerfectWeightBroc + 'kg';
            perfectWeightLorentz = data.PerfectWeightLorentz + 'kg';
            perfectWeightPotton = data.PerfectWeightPotton + 'kg';

            $(container).append(perfectWeightBroc);
            $(container2).append(perfectWeightLorentz);
            $(container3).append(perfectWeightPotton);
        }
    </script>
    <script>
        function CalculateBodyFatIndex(data) {
            var container = $('#bodyFatIndex');
            $(container).html('');
            bodyFatIndex = data.BodyFatIndex + '%' + ' ' + '+/- ~3 %';
            $(container).append(bodyFatIndex);
        }
    </script>

}
